/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.23
 * Generated at: 2024-05-27 05:15:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;

public final class newPassword_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset='utf-8'>\r\n");
      out.write("<meta name='viewport' content='width=device-width, initial-scale=1'>\r\n");
      out.write("<title>Reset Password</title>\r\n");
      out.write("<link href='https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css' rel='stylesheet'>\r\n");
      out.write("<link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.0.3/css/font-awesome.css' rel='stylesheet'>\r\n");
      out.write("<script type='text/javascript' src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js'></script>\r\n");
      out.write("<style>\r\n");
      out.write("    .placeicon { font-family: fontawesome; }\r\n");
      out.write("    .custom-control-label::before { background-color: #dee2e6; border: #dee2e6; }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body oncontextmenu='return false' class='snippet-body bg-info'>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-social/5.1.1/bootstrap-social.css\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"row justify-content-center\">\r\n");
      out.write("            <div class=\"col-12 col-md-9 col-lg-7 col-xl-6 mt-5\">\r\n");
      out.write("                <div class=\"container bg-white rounded mt-2 mb-2 px-0\">\r\n");
      out.write("                    <div class=\"row justify-content-center align-items-center pt-3\">\r\n");
      out.write("                        <h1><strong>Reset Password</strong></h1>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"pt-3 pb-3\">\r\n");
      out.write("                        <form class=\"form-horizontal\" action=\"newPassword.jsp\" method=\"POST\">\r\n");
      out.write("                            <div class=\"form-group row justify-content-center px-3\">\r\n");
      out.write("                                <div class=\"col-9 px-0\">\r\n");
      out.write("                                    <input type=\"email\" name=\"email\" placeholder=\"&#xf007; &nbsp; Email\" class=\"form-control border-info placeicon\" required>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"form-group row justify-content-center px-3\">\r\n");
      out.write("                                <div class=\"col-9 px-0\">\r\n");
      out.write("                                    <input type=\"password\" name=\"password\" placeholder=\"&#xf084; &nbsp; New Password\" class=\"form-control border-info placeicon\" required>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"form-group row justify-content-center px-3\">\r\n");
      out.write("                                <div class=\"col-9 px-0\">\r\n");
      out.write("                                    <input type=\"password\" name=\"confPassword\" placeholder=\"&#xf084; &nbsp; Confirm New Password\" class=\"form-control border-info placeicon\" required>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"form-group row justify-content-center\">\r\n");
      out.write("                                <div class=\"col-3 px-3 mt-3\">\r\n");
      out.write("                                    <input type=\"submit\" value=\"Reset\" class=\"btn btn-block btn-info\">\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </form>\r\n");
      out.write("                        ");

                            if ("POST".equalsIgnoreCase(request.getMethod())) {
                                String email = request.getParameter("email");
                                String password = request.getParameter("password");
                                String confPassword = request.getParameter("confPassword");

                                if (email != null && password != null && confPassword != null && password.equals(confPassword)) {
                                    Connection conn = null;
                                    PreparedStatement ps = null;
                                    ResultSet rs = null;

                                    try {
                                        Class.forName("com.mysql.cj.jdbc.Driver");
                                        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/sailproject", "root", "sahil");

                                        
                                        String checkEmailSql = "SELECT COUNT(*) FROM users WHERE uemail=?";
                                        ps = conn.prepareStatement(checkEmailSql);
                                        ps.setString(1, email);
                                        rs = ps.executeQuery();

                                        if (rs.next() && rs.getInt(1) > 0) {
                                           
                                            String updateSql = "UPDATE users SET upwd=? WHERE uemail=?";
                                            ps = conn.prepareStatement(updateSql);
                                            ps.setString(1, password); 
                                            ps.setString(2, email);

                                            int rowsUpdated = ps.executeUpdate();
                                            if (rowsUpdated > 0) {
                                                out.println("<div class='alert alert-success' role='alert'>Password updated successfully!</div>");
                                            } else {
                                                out.println("<div class='alert alert-danger' role='alert'>Error updating password. Please try again.</div>");
                                            }
                                        } else {
                                            out.println("<div class='alert alert-danger' role='alert'>Email ID not found!</div>");
                                        }
                                    } catch (Exception e) {
                                        out.println("<div class='alert alert-danger' role='alert'>Database error: " + e.getMessage() + "</div>");
                                    } finally {
                                        try {
                                            if (rs != null) rs.close();
                                            if (ps != null) ps.close();
                                            if (conn != null) conn.close();
                                        } catch (SQLException e) {
                                            out.println("<div class='alert alert-danger' role='alert'>Database error: " + e.getMessage() + "</div>");
                                        }
                                    }
                                } else {
                                    out.println("<div class='alert alert-danger' role='alert'>Passwords do not match or missing fields!</div>");
                                }
                            }
                        
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"mx-0 px-0 bg-light\">\r\n");
      out.write("                        <div class=\"px-4 pt-5\"><hr></div>\r\n");
      out.write("                        <div class=\"pt-2\">\r\n");
      out.write("                            <div class=\"row justify-content-center\">\r\n");
      out.write("                                <h5>Don't have an Account?<span><a href=\"registration.jsp\" class=\"text-danger\"> Register Now!</a></span></h5>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"row justify-content-center align-items-center pt-4 pb-5\">\r\n");
      out.write("                                <div class=\"col-4\"></div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script type='text/javascript' src='https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.bundle.min.js'></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
